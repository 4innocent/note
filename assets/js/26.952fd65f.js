(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{435:function(s,t,a){"use strict";a.r(t);var e=a(56),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"高级部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级部分"}},[s._v("#")]),s._v(" 高级部分")]),s._v(" "),a("h2",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),a("h3",{attrs:{id:"索引语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引语法"}},[s._v("#")]),s._v(" 索引语法")]),s._v(" "),a("ul",[a("li",[s._v("添加索引")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("indexname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tablename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("columnname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tablename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("indexname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("columnname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("删除索引")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("indexname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tablename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("查看索引")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tablename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"索引的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的优缺点"}},[s._v("#")]),s._v(" 索引的优缺点")]),s._v(" "),a("p",[s._v("索引能够加快搜索效率，也可以提高分组和排序的速度，但索引本身也是表，需要占用存储空间，一般索引大小为实际表数据的1.5倍大小。")]),s._v(" "),a("h3",{attrs:{id:"索引的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的分类"}},[s._v("#")]),s._v(" 索引的分类")]),s._v(" "),a("p",[s._v("索引分为主键索引、唯一索引、普通索引、全文索引、组合索引。")]),s._v(" "),a("ul",[a("li",[s._v("主键索引 PRIMARY KEY\n"),a("ul",[a("li",[s._v("建立在主键上的索引，不允许重复，不允许有空值")])])]),s._v(" "),a("li",[s._v("唯一索引 UNIQUE\n"),a("ul",[a("li",[s._v("建立索引的列不能有重复，但是可以为空")])])]),s._v(" "),a("li",[s._v("普通索引没有约束")]),s._v(" "),a("li",[s._v("全文索引 FULLTEXT\n"),a("ul",[a("li",[s._v("用大文本对象构建的索引")])])]),s._v(" "),a("li",[s._v("组合索引\n"),a("ul",[a("li",[s._v("使用多个列组成的索引，这多个列中不允许有空值")])])])]),s._v(" "),a("h3",{attrs:{id:"b-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-tree"}},[s._v("#")]),s._v(" B+ tree")]),s._v(" "),a("p",[s._v("基于B+ tree的索引的优点：")]),s._v(" "),a("ul",[a("li",[s._v("磁盘读写代价低"),a("br"),s._v("\n索引也是一个表，要存储在外存中，读取外存的基本单位是扇区，操作系统是以页为基本单位管理内存，通常为4K。数据库的页通常是操作系统页的整数倍，因此索引节点设置为一个页的大小，每次读取的时候把整个节点内容读入内存，内存的速度远高于外存，因此影响索引查找速度的关键就在于IO的次数。B+ tree节点中不存放数据，因此节点能够存放更多索引信息，能够减少IO次数。")]),s._v(" "),a("li",[s._v("查询速度稳定"),a("br"),s._v("\nB+ tree非叶子节点不存放数据，所有数据都在叶子结点，并且用顺序结构连接，所有叶子结点的高度都是一样的，因此查询数据速度一致。")])]),s._v(" "),a("h2",{attrs:{id:"explain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[s._v("#")]),s._v(" explain")]),s._v(" "),a("p",[s._v("性能分析可以使用explain，放在查询语句之前可以用来查看这条这条查询语句的具体执行细节：")]),s._v(" "),a("ol",[a("li",[s._v("表的执行顺序")]),s._v(" "),a("li",[s._v("数据读取操作的操作类型")]),s._v(" "),a("li",[s._v("哪些索引可能被使用")]),s._v(" "),a("li",[s._v("哪些索引实际被使用")]),s._v(" "),a("li",[s._v("表之间的引用")]),s._v(" "),a("li",[s._v("每张表有多少行被优化器优化")])]),s._v(" "),a("h3",{attrs:{id:"使用explain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用explain"}},[s._v("#")]),s._v(" 使用explain")]),s._v(" "),a("p",[s._v("explain查询结果包括")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("id")]),s._v(" "),a("th",[s._v("select_type")]),s._v(" "),a("th",[s._v("table")]),s._v(" "),a("th",[s._v("type")]),s._v(" "),a("th",[s._v("possible_keys")]),s._v(" "),a("th",[s._v("key")]),s._v(" "),a("th",[s._v("key_len")]),s._v(" "),a("th",[s._v("ref")]),s._v(" "),a("th",[s._v("rows")]),s._v(" "),a("th",[s._v("Extra")])])]),s._v(" "),a("tbody")]),s._v(" "),a("ul",[a("li",[s._v("id\n"),a("ul",[a("li",[s._v("相同大小从上到下执行")]),s._v(" "),a("li",[s._v("不同大小从大到小执行")])])]),s._v(" "),a("li",[s._v("select_type\n"),a("ul",[a("li",[s._v("simple：简单查询")]),s._v(" "),a("li",[s._v("primary: 主查询")]),s._v(" "),a("li",[s._v("derived：虚拟查询结果，如select * from (select  * from xxx)")]),s._v(" "),a("li",[s._v("union：联合查询")]),s._v(" "),a("li",[s._v("union result：联合查询结果")])])]),s._v(" "),a("li",[s._v("table\n"),a("ul",[a("li",[s._v("表名")])])]),s._v(" "),a("li",[s._v("type（最重要）访问类型\n"),a("ul",[a("li",[s._v("主要关注的有all、index、range、ref、eq_ref、const、system、null")]),s._v(" "),a("li",[s._v("优化的由好到坏依次为system》const》eq_ref》ref》range》index》all\n"),a("ul",[a("li",[s._v("system：系统级访问")]),s._v(" "),a("li",[s._v("const：通过主键或者索引一次就能找到，如select * from table where id=1")]),s._v(" "),a("li",[s._v("eq_ref：唯一性索引扫描，对于每个索引建只有一条记录与之对应，常用于主键和唯一索引explain select * from t1 t2 where t1.id = t2.id：t1的索引是唯一索引，只有一条与t2对应")]),s._v(" "),a("li",[s._v("ref：非唯一性索引，可能找到多条记录与索引匹配，不是主键或唯一索引")]),s._v(" "),a("li",[s._v("range：范围检索，只检索一个给定范围的数据，常见于between、>、<、in等范围条件检索")]),s._v(" "),a("li",[s._v("index：索引检索，针对建了索引的表进行全索引扫描")]),s._v(" "),a("li",[s._v("all：全表扫描")])])]),s._v(" "),a("li",[s._v("一般优化到index、range、ref即可")])])]),s._v(" "),a("li",[s._v("possible_keys\n"),a("ul",[a("li",[s._v("显示可能应用在本表上的索引，一个或多个，不一定被查询使用")])])]),s._v(" "),a("li",[s._v("key\n"),a("ul",[a("li",[s._v("实际使用的索引，如果为null，则没有使用索引")])])]),s._v(" "),a("li",[s._v("key_len\n"),a("ul",[a("li",[s._v("表示索引中使用的字节数，在不损失精度的情况下，字节数越少越好")])])]),s._v(" "),a("li",[s._v("ref\n"),a("ul",[a("li",[s._v("显示索引列中哪一个索引被使用了，可能为常量")])])]),s._v(" "),a("li",[s._v("rows\n"),a("ul",[a("li",[s._v("根据表信息及索引，统计出查到所需数据需要查找多少条数据记录")])])]),s._v(" "),a("li",[s._v("Extra\n"),a("ul",[a("li",[s._v("额外信息，重点关注以下几项\n"),a("ul",[a("li",[s._v("Using Filesort：使用了子索引，一般是由于没有按照已建索引顺序进行查询（order by），性能低下，需要优化")]),s._v(" "),a("li",[s._v("Using temporary：使用了临时表存储结果，常见于order by或者group by，可能原因是没有按照索引顺序进行查找，性能低下，需要优化")])])])])])]),s._v(" "),a("h2",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[s._v("#")]),s._v(" 优化")]),s._v(" "),a("h3",{attrs:{id:"单表优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单表优化"}},[s._v("#")]),s._v(" 单表优化")]),s._v(" "),a("p",[s._v("使用explain查询问题")]),s._v(" "),a("h3",{attrs:{id:"双表优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双表优化"}},[s._v("#")]),s._v(" 双表优化")]),s._v(" "),a("p",[s._v("左连接索引建在右表，右连接索引建在左表。通常索引都是已经建好的，也就是说要变换左右连接。")]),s._v(" "),a("h3",{attrs:{id:"三表优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三表优化"}},[s._v("#")]),s._v(" 三表优化")]),s._v(" "),a("ol",[a("li",[s._v("小表驱动大表查询")]),s._v(" "),a("li",[s._v("优先优化内查询")]),s._v(" "),a("li",[s._v("保证被join的字段上的条件字段已经被索引")])]),s._v(" "),a("h3",{attrs:{id:"索引优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引优化"}},[s._v("#")]),s._v(" 索引优化")]),s._v(" "),a("p",[s._v("索引有可能存在失效的情况，优化select语句有以下几条原则可以遵守：")]),s._v(" "),a("ol",[a("li",[s._v("索引能全匹配最好")]),s._v(" "),a("li",[s._v("最佳左前缀原则，从左到右依次匹配索引")]),s._v(" "),a("li",[s._v("不再索引列上做sql操作（函数操作、类型转换等），会导致全表扫描")]),s._v(" "),a("li",[s._v("存储引擎不能使用索引中范围条件右边的列，例如一个表有组合索引idx_nameAgePos，执行"),a("code",[s._v("SELECT * FROM staff where name = 'Alice' AND age > 21 AND pos = 'HR'")]),s._v("时，name，age索引能够使用，但age是范围索引，因此在其后的查询不能再使用索引，pos索引失效")]),s._v(" "),a("li",[s._v("尽量使用覆盖索引（只访问索引的列），减少使用select *")]),s._v(" "),a("li",[s._v("mysql在使用不等于（!=、<>）时会导致全表扫描")]),s._v(" "),a("li",[s._v("is null、is not null也无法使用索引")]),s._v(" "),a("li",[s._v("like匹配以通配符%开头会导致全表扫描，因此%一般放在右边，如果必须使用%()%，可以使用覆盖索引")]),s._v(" "),a("li",[s._v("字符串不加单引号会导致索引失效")]),s._v(" "),a("li",[s._v("少用or，用它也会索引失效")])]),s._v(" "),a("h3",{attrs:{id:"小表驱动大表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小表驱动大表"}},[s._v("#")]),s._v(" 小表驱动大表")]),s._v(" "),a("ul",[a("li",[s._v("主查询为大表时用in，首先查询后边的小表")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("主查询为小表时用exists，首先查询前边的小表")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"order-by排序优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-by排序优化"}},[s._v("#")]),s._v(" order by排序优化")]),s._v(" "),a("p",[s._v("order by排序尽量使用索引方式排序，避免使用filesort，无法避免使用filesort可以增大sort_buffer_size参数和max_length_for_sort_data的设置来进行优化")]),s._v(" "),a("h2",{attrs:{id:"利用日志排查问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用日志排查问题"}},[s._v("#")]),s._v(" 利用日志排查问题")]),s._v(" "),a("h3",{attrs:{id:"使用慢查询日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用慢查询日志"}},[s._v("#")]),s._v(" 使用慢查询日志")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 首先要开启慢查询日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%slow_query_log%"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-----查询是否开启了慢查询日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" slow_query_log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------开启慢查询日志，只对本次会话有效")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%long_query_time%"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----查询多长时间算一条慢查询sql")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" long_query_time "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------- 设置一条慢查询的阈值，需要新开会话")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用mysqldumpslow命令分析日志文件")]),s._v("\n")])])]),a("h3",{attrs:{id:"show-profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-profile"}},[s._v("#")]),s._v(" show profile")]),s._v(" "),a("p",[s._v("找到慢sql语句后，可以使用explain分析优化，还可以使用show profile进一步分析sql语句，使用navicat默认开启。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%profiling%"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----- 查询profiling开启状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" profiling "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------- 开启profiling")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" profiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------ 查询会话所有查询运行状况")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" profile cpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("block io "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" query "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------- 查询某条query语句的具体执行信息，navicat工具能够在查询结果中直接分析某条语句的运行信息")]),s._v("\n")])])]),a("p",[s._v("日常需要注意的几种情况")]),s._v(" "),a("ol",[a("li",[s._v("converting heap to MyISAM：查询数据太大，内存不够用，开始使用磁盘")]),s._v(" "),a("li",[s._v("create temp table：创建临时表，copy数据到临时表，用完再删除")]),s._v(" "),a("li",[s._v("copying to temp table to disk：copy临时表到磁盘文件，危险"),a("span",{staticStyle:{color:"red"}},[s._v("⚠️")])]),s._v(" "),a("li",[s._v("locked")])]),s._v(" "),a("h2",{attrs:{id:"锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[s._v("#")]),s._v(" 锁")]),s._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("mysql的锁按照功能可划分为读锁和写锁，按照种类可划分为表锁和行锁。MyISAM只支持表锁，InnoDB支持行锁，因此MyISAM适合读多写少的场景，InnoDB适合写数据较多的场景。")]),s._v(" "),a("h3",{attrs:{id:"表锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表锁"}},[s._v("#")]),s._v(" 表锁")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("open")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--- 查询当前数据库的表锁，in_use为1表示表被锁")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lock")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------- 以读（锁）方式锁定某张表，多张表以,分割")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unlock")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------- 解锁所有锁定表")]),s._v("\n")])])]),a("p",[s._v("MyISAM引擎默认给所有表加读锁，表读锁不会阻塞其他会话读该表，但会阻塞本表的写操作。表写锁会阻塞其他会话对本表的读写。")]),s._v(" "),a("h3",{attrs:{id:"行锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行锁"}},[s._v("#")]),s._v(" 行锁")]),s._v(" "),a("p",[s._v("InnoDB自动为表加行锁，支持事务。\n隔离级别分为"),a("br"),s._v("\n更新丢失（后一个事物覆盖了前一个事物的操作）"),a("br"),s._v("\n脏读（一个事物读取到了另一个事物已修改未提交的数据）"),a("br"),s._v("\n不可重复读（一个事物读取到了另一个事物已提交的数据）"),a("br"),s._v("\n幻读（一个事物读取到了另一个事物新增的数据）"),a("br"),s._v("\n默认的隔离级别为Repeat-Read（可重复读）避免了脏读、不可重复读、更新丢失。"),a("br"),s._v(" "),a("strong",[s._v("行锁在未提交的情况下操作同一行时会阻塞")]),s._v("，"),a("span",{staticStyle:{color:"red"}},[s._v("索引失效会导致行锁变为表锁（如varchar类型未加单引号）")]),s._v("，当数据操作在一个范围内时（where）范围中的数据即使不存在也会被锁，间歇锁。")]),s._v(" "),a("ul",[a("li",[s._v("锁定某一行\n"),a("ul",[a("li",[a("code",[s._v("select * from table where id = 1 for update;")]),s._v("，通过for update来锁定某一行")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);